name: Build

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true
      build_type:
        type: string
        required: true

env:
  BUILD_TYPE: ${{ inputs.build_type }}

jobs:
  build:
    name: ${{matrix.name}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            name: Linux
            release-suffix: LIN64

          - os: macos-latest
            name: macOS
            release-suffix: MACOS

          - os: windows-latest
            name: Windows
            release-suffix: WIN64
            arch: win64_mingw
            cmake-args: -G "MinGW Makefiles"

    runs-on: ${{matrix.os}}

    env:
      RELEASE_FILE: ${{github.event.repository.name}}-${{inputs.version}}-${{matrix.release-suffix}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: qteletextmaker

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6
          arch: ${{matrix.arch}}
          tools: ${{matrix.tools}}

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: ${{matrix.cmake-prefix}} cmake $GITHUB_WORKSPACE/qteletextmaker -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCPACK_PACKAGE_FILE_NAME=${{env.RELEASE_FILE}} ${{matrix.cmake-args}}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          cmake --build . --config $BUILD_TYPE -j 2

      - name: Package
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake --build . --config $BUILD_TYPE --target package

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: builds
          retention-days: 7
          path: |
            ${{runner.workspace}}/build/${{env.RELEASE_FILE}}.tar.gz
            ${{runner.workspace}}/build/${{env.RELEASE_FILE}}.zip
