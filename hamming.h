#ifndef HAMMING_H
#define HAMMING_H

// Hamming 8/4 decoding table
// decoded_value = hamming_8_4_decode[encoded_value]
// 0xff - double bit error that can't be corrected
const unsigned char hamming_8_4_decode[256] = {
	0x01, 0xff, 0x01, 0x01, 0xff, 0x00, 0x01, 0xff,
	0xff, 0x02, 0x01, 0xff, 0x0a, 0xff, 0xff, 0x07,
	0xff, 0x00, 0x01, 0xff, 0x00, 0x00, 0xff, 0x00,
	0x06, 0xff, 0xff, 0x0b, 0xff, 0x00, 0x03, 0xff,
	0xff, 0x0c, 0x01, 0xff, 0x04, 0xff, 0xff, 0x07,
	0x06, 0xff, 0xff, 0x07, 0xff, 0x07, 0x07, 0x07,
	0x06, 0xff, 0xff, 0x05, 0xff, 0x00, 0x0d, 0xff,
	0x06, 0x06, 0x06, 0xff, 0x06, 0xff, 0xff, 0x07,
	0xff, 0x02, 0x01, 0xff, 0x04, 0xff, 0xff, 0x09,
	0x02, 0x02, 0xff, 0x02, 0xff, 0x02, 0x03, 0xff,
	0x08, 0xff, 0xff, 0x05, 0xff, 0x00, 0x03, 0xff,
	0xff, 0x02, 0x03, 0xff, 0x03, 0xff, 0x03, 0x03,
	0x04, 0xff, 0xff, 0x05, 0x04, 0x04, 0x04, 0xff,
	0xff, 0x02, 0x0f, 0xff, 0x04, 0xff, 0xff, 0x07,
	0xff, 0x05, 0x05, 0x05, 0x04, 0xff, 0xff, 0x05,
	0x06, 0xff, 0xff, 0x05, 0xff, 0x0e, 0x03, 0xff,
	0xff, 0x0c, 0x01, 0xff, 0x0a, 0xff, 0xff, 0x09,
	0x0a, 0xff, 0xff, 0x0b, 0x0a, 0x0a, 0x0a, 0xff,
	0x08, 0xff, 0xff, 0x0b, 0xff, 0x00, 0x0d, 0xff,
	0xff, 0x0b, 0x0b, 0x0b, 0x0a, 0xff, 0xff, 0x0b,
	0x0c, 0x0c, 0xff, 0x0c, 0xff, 0x0c, 0x0d, 0xff,
	0xff, 0x0c, 0x0f, 0xff, 0x0a, 0xff, 0xff, 0x07,
	0xff, 0x0c, 0x0d, 0xff, 0x0d, 0xff, 0x0d, 0x0d,
	0x06, 0xff, 0xff, 0x0b, 0xff, 0x0e, 0x0d, 0xff,
	0x08, 0xff, 0xff, 0x09, 0xff, 0x09, 0x09, 0x09,
	0xff, 0x02, 0x0f, 0xff, 0x0a, 0xff, 0xff, 0x09,
	0x08, 0x08, 0x08, 0xff, 0x08, 0xff, 0xff, 0x09,
	0x08, 0xff, 0xff, 0x0b, 0xff, 0x0e, 0x03, 0xff,
	0xff, 0x0c, 0x0f, 0xff, 0x04, 0xff, 0xff, 0x09,
	0x0f, 0xff, 0x0f, 0x0f, 0xff, 0x0e, 0x0f, 0xff,
	0x08, 0xff, 0xff, 0x05, 0xff, 0x0e, 0x0d, 0xff,
	0xff, 0x0e, 0x0f, 0xff, 0x0e, 0x0e, 0xff, 0x0e
};

const unsigned char hamming_24_18_parities[3][256] = {
	{ // Parities of first byte
		0x00, 0x21, 0x22, 0x03, 0x23, 0x02, 0x01, 0x20, 
		0x24, 0x05, 0x06, 0x27, 0x07, 0x26, 0x25, 0x04, 
		0x25, 0x04, 0x07, 0x26, 0x06, 0x27, 0x24, 0x05, 
		0x01, 0x20, 0x23, 0x02, 0x22, 0x03, 0x00, 0x21, 
		0x26, 0x07, 0x04, 0x25, 0x05, 0x24, 0x27, 0x06, 
		0x02, 0x23, 0x20, 0x01, 0x21, 0x00, 0x03, 0x22, 
		0x03, 0x22, 0x21, 0x00, 0x20, 0x01, 0x02, 0x23, 
		0x27, 0x06, 0x05, 0x24, 0x04, 0x25, 0x26, 0x07, 
		0x27, 0x06, 0x05, 0x24, 0x04, 0x25, 0x26, 0x07, 
		0x03, 0x22, 0x21, 0x00, 0x20, 0x01, 0x02, 0x23, 
		0x02, 0x23, 0x20, 0x01, 0x21, 0x00, 0x03, 0x22, 
		0x26, 0x07, 0x04, 0x25, 0x05, 0x24, 0x27, 0x06, 
		0x01, 0x20, 0x23, 0x02, 0x22, 0x03, 0x00, 0x21, 
		0x25, 0x04, 0x07, 0x26, 0x06, 0x27, 0x24, 0x05, 
		0x24, 0x05, 0x06, 0x27, 0x07, 0x26, 0x25, 0x04, 
		0x00, 0x21, 0x22, 0x03, 0x23, 0x02, 0x01, 0x20, 
		0x28, 0x09, 0x0a, 0x2b, 0x0b, 0x2a, 0x29, 0x08, 
		0x0c, 0x2d, 0x2e, 0x0f, 0x2f, 0x0e, 0x0d, 0x2c, 
		0x0d, 0x2c, 0x2f, 0x0e, 0x2e, 0x0f, 0x0c, 0x2d, 
		0x29, 0x08, 0x0b, 0x2a, 0x0a, 0x2b, 0x28, 0x09, 
		0x0e, 0x2f, 0x2c, 0x0d, 0x2d, 0x0c, 0x0f, 0x2e, 
		0x2a, 0x0b, 0x08, 0x29, 0x09, 0x28, 0x2b, 0x0a, 
		0x2b, 0x0a, 0x09, 0x28, 0x08, 0x29, 0x2a, 0x0b, 
		0x0f, 0x2e, 0x2d, 0x0c, 0x2c, 0x0d, 0x0e, 0x2f, 
		0x0f, 0x2e, 0x2d, 0x0c, 0x2c, 0x0d, 0x0e, 0x2f, 
		0x2b, 0x0a, 0x09, 0x28, 0x08, 0x29, 0x2a, 0x0b, 
		0x2a, 0x0b, 0x08, 0x29, 0x09, 0x28, 0x2b, 0x0a, 
		0x0e, 0x2f, 0x2c, 0x0d, 0x2d, 0x0c, 0x0f, 0x2e, 
		0x29, 0x08, 0x0b, 0x2a, 0x0a, 0x2b, 0x28, 0x09, 
		0x0d, 0x2c, 0x2f, 0x0e, 0x2e, 0x0f, 0x0c, 0x2d, 
		0x0c, 0x2d, 0x2e, 0x0f, 0x2f, 0x0e, 0x0d, 0x2c, 
		0x28, 0x09, 0x0a, 0x2b, 0x0b, 0x2a, 0x29, 0x08
	},
	{ // Parities of second byte
		0x00, 0x29, 0x2a, 0x03, 0x2b, 0x02, 0x01, 0x28, 
		0x2c, 0x05, 0x06, 0x2f, 0x07, 0x2e, 0x2d, 0x04, 
		0x2d, 0x04, 0x07, 0x2e, 0x06, 0x2f, 0x2c, 0x05, 
		0x01, 0x28, 0x2b, 0x02, 0x2a, 0x03, 0x00, 0x29, 
		0x2e, 0x07, 0x04, 0x2d, 0x05, 0x2c, 0x2f, 0x06, 
		0x02, 0x2b, 0x28, 0x01, 0x29, 0x00, 0x03, 0x2a, 
		0x03, 0x2a, 0x29, 0x00, 0x28, 0x01, 0x02, 0x2b, 
		0x2f, 0x06, 0x05, 0x2c, 0x04, 0x2d, 0x2e, 0x07, 
		0x2f, 0x06, 0x05, 0x2c, 0x04, 0x2d, 0x2e, 0x07, 
		0x03, 0x2a, 0x29, 0x00, 0x28, 0x01, 0x02, 0x2b, 
		0x02, 0x2b, 0x28, 0x01, 0x29, 0x00, 0x03, 0x2a, 
		0x2e, 0x07, 0x04, 0x2d, 0x05, 0x2c, 0x2f, 0x06, 
		0x01, 0x28, 0x2b, 0x02, 0x2a, 0x03, 0x00, 0x29, 
		0x2d, 0x04, 0x07, 0x2e, 0x06, 0x2f, 0x2c, 0x05, 
		0x2c, 0x05, 0x06, 0x2f, 0x07, 0x2e, 0x2d, 0x04, 
		0x00, 0x29, 0x2a, 0x03, 0x2b, 0x02, 0x01, 0x28, 
		0x30, 0x19, 0x1a, 0x33, 0x1b, 0x32, 0x31, 0x18, 
		0x1c, 0x35, 0x36, 0x1f, 0x37, 0x1e, 0x1d, 0x34, 
		0x1d, 0x34, 0x37, 0x1e, 0x36, 0x1f, 0x1c, 0x35, 
		0x31, 0x18, 0x1b, 0x32, 0x1a, 0x33, 0x30, 0x19, 
		0x1e, 0x37, 0x34, 0x1d, 0x35, 0x1c, 0x1f, 0x36, 
		0x32, 0x1b, 0x18, 0x31, 0x19, 0x30, 0x33, 0x1a, 
		0x33, 0x1a, 0x19, 0x30, 0x18, 0x31, 0x32, 0x1b, 
		0x1f, 0x36, 0x35, 0x1c, 0x34, 0x1d, 0x1e, 0x37, 
		0x1f, 0x36, 0x35, 0x1c, 0x34, 0x1d, 0x1e, 0x37, 
		0x33, 0x1a, 0x19, 0x30, 0x18, 0x31, 0x32, 0x1b, 
		0x32, 0x1b, 0x18, 0x31, 0x19, 0x30, 0x33, 0x1a, 
		0x1e, 0x37, 0x34, 0x1d, 0x35, 0x1c, 0x1f, 0x36, 
		0x31, 0x18, 0x1b, 0x32, 0x1a, 0x33, 0x30, 0x19, 
		0x1d, 0x34, 0x37, 0x1e, 0x36, 0x1f, 0x1c, 0x35, 
		0x1c, 0x35, 0x36, 0x1f, 0x37, 0x1e, 0x1d, 0x34, 
		0x30, 0x19, 0x1a, 0x33, 0x1b, 0x32, 0x31, 0x18
	},
	{ // Parities of third byte
		0x3f, 0x0e, 0x0d, 0x3c, 0x0c, 0x3d, 0x3e, 0x0f, 
		0x0b, 0x3a, 0x39, 0x08, 0x38, 0x09, 0x0a, 0x3b, 
		0x0a, 0x3b, 0x38, 0x09, 0x39, 0x08, 0x0b, 0x3a, 
		0x3e, 0x0f, 0x0c, 0x3d, 0x0d, 0x3c, 0x3f, 0x0e, 
		0x09, 0x38, 0x3b, 0x0a, 0x3a, 0x0b, 0x08, 0x39, 
		0x3d, 0x0c, 0x0f, 0x3e, 0x0e, 0x3f, 0x3c, 0x0d, 
		0x3c, 0x0d, 0x0e, 0x3f, 0x0f, 0x3e, 0x3d, 0x0c, 
		0x08, 0x39, 0x3a, 0x0b, 0x3b, 0x0a, 0x09, 0x38, 
		0x08, 0x39, 0x3a, 0x0b, 0x3b, 0x0a, 0x09, 0x38, 
		0x3c, 0x0d, 0x0e, 0x3f, 0x0f, 0x3e, 0x3d, 0x0c, 
		0x3d, 0x0c, 0x0f, 0x3e, 0x0e, 0x3f, 0x3c, 0x0d, 
		0x09, 0x38, 0x3b, 0x0a, 0x3a, 0x0b, 0x08, 0x39, 
		0x3e, 0x0f, 0x0c, 0x3d, 0x0d, 0x3c, 0x3f, 0x0e, 
		0x0a, 0x3b, 0x38, 0x09, 0x39, 0x08, 0x0b, 0x3a, 
		0x0b, 0x3a, 0x39, 0x08, 0x38, 0x09, 0x0a, 0x3b, 
		0x3f, 0x0e, 0x0d, 0x3c, 0x0c, 0x3d, 0x3e, 0x0f, 
		0x1f, 0x2e, 0x2d, 0x1c, 0x2c, 0x1d, 0x1e, 0x2f, 
		0x2b, 0x1a, 0x19, 0x28, 0x18, 0x29, 0x2a, 0x1b, 
		0x2a, 0x1b, 0x18, 0x29, 0x19, 0x28, 0x2b, 0x1a, 
		0x1e, 0x2f, 0x2c, 0x1d, 0x2d, 0x1c, 0x1f, 0x2e, 
		0x29, 0x18, 0x1b, 0x2a, 0x1a, 0x2b, 0x28, 0x19, 
		0x1d, 0x2c, 0x2f, 0x1e, 0x2e, 0x1f, 0x1c, 0x2d, 
		0x1c, 0x2d, 0x2e, 0x1f, 0x2f, 0x1e, 0x1d, 0x2c, 
		0x28, 0x19, 0x1a, 0x2b, 0x1b, 0x2a, 0x29, 0x18, 
		0x28, 0x19, 0x1a, 0x2b, 0x1b, 0x2a, 0x29, 0x18, 
		0x1c, 0x2d, 0x2e, 0x1f, 0x2f, 0x1e, 0x1d, 0x2c, 
		0x1d, 0x2c, 0x2f, 0x1e, 0x2e, 0x1f, 0x1c, 0x2d, 
		0x29, 0x18, 0x1b, 0x2a, 0x1a, 0x2b, 0x28, 0x19, 
		0x1e, 0x2f, 0x2c, 0x1d, 0x2d, 0x1c, 0x1f, 0x2e, 
		0x2a, 0x1b, 0x18, 0x29, 0x19, 0x28, 0x2b, 0x1a, 
		0x2b, 0x1a, 0x19, 0x28, 0x18, 0x29, 0x2a, 0x1b, 
		0x1f, 0x2e, 0x2d, 0x1c, 0x2c, 0x1d, 0x1e, 0x2f
	}
};

static const unsigned char hamming_24_18_decode_d1_d4[64] = {
	0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x02, 0x03, 
	0x04, 0x05, 0x04, 0x05, 0x06, 0x07, 0x06, 0x07, 
	0x08, 0x09, 0x08, 0x09, 0x0a, 0x0b, 0x0a, 0x0b, 
	0x0c, 0x0d, 0x0c, 0x0d, 0x0e, 0x0f, 0x0e, 0x0f, 
	0x00, 0x01, 0x00, 0x01, 0x02, 0x03, 0x02, 0x03, 
	0x04, 0x05, 0x04, 0x05, 0x06, 0x07, 0x06, 0x07, 
	0x08, 0x09, 0x08, 0x09, 0x0a, 0x0b, 0x0a, 0x0b, 
	0x0c, 0x0d, 0x0c, 0x0d, 0x0e, 0x0f, 0x0e, 0x0f
};

// Mapping from parity checks in hamming_24_18_parities to incorrect bit
// 0x80000000 - double bit error that can't be corrected
static const unsigned int hamming_24_18_decode_correct [64] = {
	0x00000000, 0x80000000, 0x80000000, 0x80000000, 
	0x80000000, 0x80000000, 0x80000000, 0x80000000, 
	0x80000000, 0x80000000, 0x80000000, 0x80000000, 
	0x80000000, 0x80000000, 0x80000000, 0x80000000, 
	0x80000000, 0x80000000, 0x80000000, 0x80000000, 
	0x80000000, 0x80000000, 0x80000000, 0x80000000, 
	0x80000000, 0x80000000, 0x80000000, 0x80000000, 
	0x80000000, 0x80000000, 0x80000000, 0x80000000, 
	0x00000000, 0x00000000, 0x00000000, 0x00000001, 
	0x00000000, 0x00000002, 0x00000004, 0x00000008, 
	0x00000000, 0x00000010, 0x00000020, 0x00000040, 
	0x00000080, 0x00000100, 0x00000200, 0x00000400, 
	0x00000000, 0x00000800, 0x00001000, 0x00002000, 
	0x00004000, 0x00008000, 0x00010000, 0x00020000, 
	0x80000000, 0x80000000, 0x80000000, 0x80000000, 
	0x80000000, 0x80000000, 0x80000000, 0x80000000
};

#endif
